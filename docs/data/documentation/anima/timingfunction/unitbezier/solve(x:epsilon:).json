{"kind":"symbol","identifier":{"url":"doc:\/\/Anima\/documentation\/Anima\/TimingFunction\/UnitBezier\/solve(x:epsilon:)","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/anima\/timingfunction\/unitbezier\/solve(x:epsilon:)"]}],"metadata":{"modules":[{"name":"Anima"}],"externalID":"s:5Anima14TimingFunctionO10UnitBezierV5solve1x7epsilonS2d_SdtF","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"solve"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"x"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"text":", ","kind":"text"},{"text":"epsilon","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sd","text":"Double","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sd","text":"Double"}],"symbolKind":"method","role":"symbol","title":"solve(x:epsilon:)","roleHeading":"Instance Method"},"abstract":[{"type":"text","text":"Calculates the resulting "},{"type":"codeVoice","code":"y"},{"text":" for given ","type":"text"},{"code":"x","type":"codeVoice"},{"text":".","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"solve"},{"text":"(","kind":"text"},{"text":"x","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Double","kind":"typeIdentifier","preciseIdentifier":"s:Sd"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"epsilon"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sd","text":"Double"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"text":"Return Value","anchor":"return-value","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"The solved "},{"code":"y","type":"codeVoice"},{"type":"text","text":" value."}],"type":"paragraph"}]},{"kind":"content","content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"x: The value to solve for."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"epsilon: The required precision of the result (where "},{"code":"x * epsilon","type":"codeVoice"},{"text":" is the maximum time segment to be evaluated).","type":"text"}]}]}]}]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"sections":[],"hierarchy":{"paths":[["doc:\/\/Anima\/documentation\/Anima","doc:\/\/Anima\/documentation\/Anima\/TimingFunction","doc:\/\/Anima\/documentation\/Anima\/TimingFunction\/UnitBezier"]]},"references":{"doc://Anima/documentation/Anima/TimingFunction":{"url":"\/documentation\/anima\/timingfunction","identifier":"doc:\/\/Anima\/documentation\/Anima\/TimingFunction","kind":"symbol","title":"TimingFunction","type":"topic","abstract":[{"type":"text","text":"The timing function maps an input time normalized to the range "},{"code":"[0,1]","type":"codeVoice"},{"text":" to an output time also in the range ","type":"text"},{"type":"codeVoice","code":"[0,1]"},{"type":"text","text":". Itâ€™s used to define the pacing of an animation as a timing curve."}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"TimingFunction","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"TimingFunction","kind":"identifier"}]},"doc://Anima/documentation/Anima/TimingFunction/UnitBezier/solve(x:epsilon:)":{"url":"\/documentation\/anima\/timingfunction\/unitbezier\/solve(x:epsilon:)","title":"solve(x:epsilon:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"solve","kind":"identifier"},{"text":"(","kind":"text"},{"text":"x","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Double","kind":"typeIdentifier","preciseIdentifier":"s:Sd"},{"kind":"text","text":", "},{"text":"epsilon","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sd","kind":"typeIdentifier","text":"Double"},{"text":") -> ","kind":"text"},{"text":"Double","preciseIdentifier":"s:Sd","kind":"typeIdentifier"}],"abstract":[{"text":"Calculates the resulting ","type":"text"},{"type":"codeVoice","code":"y"},{"type":"text","text":" for given "},{"type":"codeVoice","code":"x"},{"type":"text","text":"."}],"identifier":"doc:\/\/Anima\/documentation\/Anima\/TimingFunction\/UnitBezier\/solve(x:epsilon:)","kind":"symbol","type":"topic"},"doc://Anima/documentation/Anima/TimingFunction/UnitBezier":{"role":"symbol","navigatorTitle":[{"text":"UnitBezier","kind":"identifier"}],"identifier":"doc:\/\/Anima\/documentation\/Anima\/TimingFunction\/UnitBezier","title":"TimingFunction.UnitBezier","url":"\/documentation\/anima\/timingfunction\/unitbezier","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"UnitBezier"}],"kind":"symbol","abstract":[{"text":"A bezier curve that can be used to calculate timing functions.","type":"text"}],"type":"topic"},"doc://Anima/documentation/Anima":{"kind":"symbol","url":"\/documentation\/anima","title":"Anima","identifier":"doc:\/\/Anima\/documentation\/Anima","type":"topic","abstract":[{"text":"An animation framework for iOS, tvOS, and macOS.","type":"text"}],"role":"collection"}}}