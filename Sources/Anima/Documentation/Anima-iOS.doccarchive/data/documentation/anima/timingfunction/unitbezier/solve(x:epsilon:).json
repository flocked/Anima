{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/anima\/timingfunction\/unitbezier\/solve(x:epsilon:)"]}],"abstract":[{"text":"Calculates the resulting ","type":"text"},{"type":"codeVoice","code":"y"},{"type":"text","text":" for given "},{"type":"codeVoice","code":"x"},{"type":"text","text":"."}],"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"primaryContentSections":[{"declarations":[{"platforms":["iOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"solve"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"x"},{"kind":"text","text":": "},{"text":"Double","kind":"typeIdentifier","preciseIdentifier":"s:Sd"},{"text":", ","kind":"text"},{"text":"epsilon","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Double","kind":"typeIdentifier","preciseIdentifier":"s:Sd"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sd","text":"Double"}]}],"kind":"declarations"},{"kind":"content","content":[{"anchor":"return-value","text":"Return Value","type":"heading","level":2},{"inlineContent":[{"text":"The solved ","type":"text"},{"code":"y","type":"codeVoice"},{"type":"text","text":" value."}],"type":"paragraph"}]},{"content":[{"text":"Discussion","type":"heading","anchor":"discussion","level":2},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"x: The value to solve for.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"epsilon: The required precision of the result (where "},{"code":"x * epsilon","type":"codeVoice"},{"text":" is the maximum time segment to be evaluated).","type":"text"}]}]}]}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/Anima\/documentation\/Anima","doc:\/\/Anima\/documentation\/Anima\/TimingFunction","doc:\/\/Anima\/documentation\/Anima\/TimingFunction\/UnitBezier"]]},"kind":"symbol","metadata":{"title":"solve(x:epsilon:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"solve"},{"kind":"text","text":"("},{"text":"x","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sd","text":"Double","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"epsilon","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":") -> "},{"text":"Double","kind":"typeIdentifier","preciseIdentifier":"s:Sd"}],"symbolKind":"method","role":"symbol","modules":[{"name":"Anima"}],"roleHeading":"Instance Method","externalID":"s:5Anima14TimingFunctionO10UnitBezierV5solve1x7epsilonS2d_SdtF"},"identifier":{"url":"doc:\/\/Anima\/documentation\/Anima\/TimingFunction\/UnitBezier\/solve(x:epsilon:)","interfaceLanguage":"swift"},"references":{"doc://Anima/documentation/Anima/TimingFunction":{"url":"\/documentation\/anima\/timingfunction","identifier":"doc:\/\/Anima\/documentation\/Anima\/TimingFunction","type":"topic","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TimingFunction","kind":"identifier"}],"kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"The timing function maps an input time normalized to the range "},{"code":"[0,1]","type":"codeVoice"},{"text":" to an output time also in the range ","type":"text"},{"type":"codeVoice","code":"[0,1]"},{"type":"text","text":". Itâ€™s used to define the pacing of an animation as a timing curve."}],"navigatorTitle":[{"kind":"identifier","text":"TimingFunction"}],"title":"TimingFunction"},"doc://Anima/documentation/Anima":{"title":"Anima","role":"collection","kind":"symbol","url":"\/documentation\/anima","identifier":"doc:\/\/Anima\/documentation\/Anima","abstract":[{"type":"text","text":"Anima is an animation framework for iOS, tvOS, and macOS. It can animate properties using spring, easing and decay animations."}],"type":"topic"},"doc://Anima/documentation/Anima/TimingFunction/UnitBezier":{"title":"TimingFunction.UnitBezier","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"UnitBezier"}],"kind":"symbol","navigatorTitle":[{"text":"UnitBezier","kind":"identifier"}],"url":"\/documentation\/anima\/timingfunction\/unitbezier","type":"topic","identifier":"doc:\/\/Anima\/documentation\/Anima\/TimingFunction\/UnitBezier","abstract":[{"type":"text","text":"A bezier curve that can be used to calculate timing functions."}]},"doc://Anima/documentation/Anima/TimingFunction/UnitBezier/solve(x:epsilon:)":{"url":"\/documentation\/anima\/timingfunction\/unitbezier\/solve(x:epsilon:)","title":"solve(x:epsilon:)","identifier":"doc:\/\/Anima\/documentation\/Anima\/TimingFunction\/UnitBezier\/solve(x:epsilon:)","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"solve","kind":"identifier"},{"kind":"text","text":"("},{"text":"x","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Double","kind":"typeIdentifier","preciseIdentifier":"s:Sd"},{"kind":"text","text":", "},{"text":"epsilon","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sd","text":"Double"},{"text":") -> ","kind":"text"},{"text":"Double","kind":"typeIdentifier","preciseIdentifier":"s:Sd"}],"role":"symbol","abstract":[{"type":"text","text":"Calculates the resulting "},{"type":"codeVoice","code":"y"},{"text":" for given ","type":"text"},{"type":"codeVoice","code":"x"},{"type":"text","text":"."}]}}}