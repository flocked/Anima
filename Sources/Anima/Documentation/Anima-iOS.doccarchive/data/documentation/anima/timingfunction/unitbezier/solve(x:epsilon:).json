{"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Anima\/documentation\/Anima\/TimingFunction\/UnitBezier\/solve(x:epsilon:)"},"metadata":{"role":"symbol","symbolKind":"method","title":"solve(x:epsilon:)","externalID":"s:5Anima14TimingFunctionO10UnitBezierV5solve1x7epsilonS2d_SdtF","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"solve"},{"kind":"text","text":"("},{"kind":"externalParam","text":"x"},{"kind":"text","text":": "},{"text":"Double","kind":"typeIdentifier","preciseIdentifier":"s:Sd"},{"kind":"text","text":", "},{"text":"epsilon","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Double","kind":"typeIdentifier","preciseIdentifier":"s:Sd"},{"kind":"text","text":") -> "},{"text":"Double","kind":"typeIdentifier","preciseIdentifier":"s:Sd"}],"modules":[{"name":"Anima"}],"roleHeading":"Instance Method"},"hierarchy":{"paths":[["doc:\/\/Anima\/documentation\/Anima","doc:\/\/Anima\/documentation\/Anima\/TimingFunction","doc:\/\/Anima\/documentation\/Anima\/TimingFunction\/UnitBezier"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"solve","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"x"},{"text":": ","kind":"text"},{"text":"Double","kind":"typeIdentifier","preciseIdentifier":"s:Sd"},{"text":", ","kind":"text"},{"text":"epsilon","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Double","kind":"typeIdentifier","preciseIdentifier":"s:Sd"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sd","text":"Double"}],"platforms":["iOS"],"languages":["swift"]}]},{"content":[{"anchor":"return-value","text":"Return Value","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"The solved "},{"code":"y","type":"codeVoice"},{"text":" value.","type":"text"}]}],"kind":"content"},{"kind":"content","content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"x: The value to solve for."}]}]},{"content":[{"inlineContent":[{"text":"epsilon: The required precision of the result (where ","type":"text"},{"type":"codeVoice","code":"x * epsilon"},{"type":"text","text":" is the maximum time segment to be evaluated)."}],"type":"paragraph"}]}]}]}],"sections":[],"abstract":[{"type":"text","text":"Calculates the resulting "},{"type":"codeVoice","code":"y"},{"text":" for given ","type":"text"},{"code":"x","type":"codeVoice"},{"type":"text","text":"."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/anima\/timingfunction\/unitbezier\/solve(x:epsilon:)"]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"references":{"doc://Anima/documentation/Anima":{"type":"topic","title":"Anima","identifier":"doc:\/\/Anima\/documentation\/Anima","role":"collection","abstract":[{"type":"text","text":"Anima is an animation framework for iOS, tvOS, and macOS. It can animate properties using spring, easing and decay animations."}],"url":"\/documentation\/anima","kind":"symbol"},"doc://Anima/documentation/Anima/TimingFunction/UnitBezier/solve(x:epsilon:)":{"type":"topic","title":"solve(x:epsilon:)","abstract":[{"text":"Calculates the resulting ","type":"text"},{"code":"y","type":"codeVoice"},{"type":"text","text":" for given "},{"code":"x","type":"codeVoice"},{"text":".","type":"text"}],"kind":"symbol","identifier":"doc:\/\/Anima\/documentation\/Anima\/TimingFunction\/UnitBezier\/solve(x:epsilon:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"solve","kind":"identifier"},{"text":"(","kind":"text"},{"text":"x","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sd","kind":"typeIdentifier","text":"Double"},{"text":", ","kind":"text"},{"text":"epsilon","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"}],"url":"\/documentation\/anima\/timingfunction\/unitbezier\/solve(x:epsilon:)"},"doc://Anima/documentation/Anima/TimingFunction":{"navigatorTitle":[{"text":"TimingFunction","kind":"identifier"}],"type":"topic","title":"TimingFunction","abstract":[{"text":"The timing function maps an input time normalized to the range ","type":"text"},{"code":"[0,1]","type":"codeVoice"},{"text":" to an output time also in the range ","type":"text"},{"type":"codeVoice","code":"[0,1]"},{"type":"text","text":". Itâ€™s used to define the pacing of an animation as a timing curve."}],"kind":"symbol","identifier":"doc:\/\/Anima\/documentation\/Anima\/TimingFunction","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TimingFunction","kind":"identifier"}],"url":"\/documentation\/anima\/timingfunction"},"doc://Anima/documentation/Anima/TimingFunction/UnitBezier":{"navigatorTitle":[{"text":"UnitBezier","kind":"identifier"}],"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"A bezier curve that can be used to calculate timing functions."}],"identifier":"doc:\/\/Anima\/documentation\/Anima\/TimingFunction\/UnitBezier","title":"TimingFunction.UnitBezier","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"UnitBezier"}],"url":"\/documentation\/anima\/timingfunction\/unitbezier"}}}