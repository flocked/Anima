{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/anima\/animations"]}],"primaryContentSections":[{"kind":"content","content":[{"level":2,"type":"heading","anchor":"Overview","text":"Overview"},{"inlineContent":[{"type":"text","text":"There are three types of animations: Decay, Easing and Spring. They let you animate properties conforming to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Anima\/documentation\/Anima\/AnimatableProperty"},{"type":"text","text":"."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You provide the inital value and target of the animation."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"To start an animation use      "},{"type":"reference","identifier":"doc:\/\/Anima\/documentation\/Anima\/AnimationProviding\/start(afterDelay:)","isActive":true},{"text":", to pause      ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/Anima\/documentation\/Anima\/AnimationProviding\/pause()"},{"type":"text","text":" and to stop "},{"isActive":true,"identifier":"doc:\/\/Anima\/documentation\/Anima\/AnimationProviding\/stop(at:immediately:)","type":"reference"},{"text":".","type":"text"}]},{"inlineContent":[{"identifier":"doc:\/\/Anima\/documentation\/Anima\/SpringAnimation\/valueChanged","isActive":true,"type":"reference"},{"type":"text","text":" gets called whenever the current value of the animation changes."}],"type":"paragraph"},{"type":"codeListing","code":["let animation = SpringAnimation(spring: .bouncy, value: view.frame.size, target: CGSize(width: 500, height: 500))","animation.valueChanged = { newSize in ","    view.frame.size = newSize","}","animation.start(afterDelay: 0.0)"],"syntax":"swift"},{"inlineContent":[{"identifier":"doc:\/\/Anima\/documentation\/Anima\/SpringAnimation\/completion","isActive":true,"type":"reference"},{"type":"text","text":" gets called when the animation either finishes, or “re-targets” to a new target value."}],"type":"paragraph"},{"code":["animation.completion = { event in ","    if event.isFinished {","    \/\/ handle finished state","    }","}"],"syntax":"swift","type":"codeListing"},{"anchor":"Animation-Types","type":"heading","level":2,"text":"Animation Types"},{"anchor":"Spring-Animation","text":"Spring Animation","type":"heading","level":3},{"inlineContent":[{"text":"A spring based animation for fluid animations.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"You provide a ","type":"text"},{"identifier":"doc:\/\/Anima\/documentation\/Anima\/Spring","isActive":true,"type":"reference"},{"text":" which describes the spring configuration. ","type":"text"},{"type":"codeVoice","code":"Spring"},{"type":"text","text":" offers many predefined configurations like "},{"identifier":"doc:\/\/Anima\/documentation\/Anima\/Spring\/bouncy","isActive":true,"type":"reference"},{"type":"text","text":", "},{"isActive":true,"type":"reference","identifier":"doc:\/\/Anima\/documentation\/Anima\/Spring\/smooth"},{"type":"text","text":" or "},{"isActive":true,"type":"reference","identifier":"doc:\/\/Anima\/documentation\/Anima\/Spring\/snappy"},{"type":"text","text":")."}]},{"code":["let value = CGPoint(x: 0, y: 0)","let target = CGPoint(x: 100, y: 100)","","let springAnimation = SpringAnimation(spring: .bouncy, value: value, target: target)","springAnimation.valueChanged = { newValue in","    view.frame.origin = newValue","}","springAnimation.start()"],"syntax":"swift","type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"When changing the target while the animation is runniong, the animation’s velocity is preserved for providing fluid animations."}]},{"text":"Easing Animation","type":"heading","level":3,"anchor":"Easing-Animation"},{"inlineContent":[{"text":"An easing based animation.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You provide it "},{"isActive":true,"identifier":"doc:\/\/Anima\/documentation\/Anima\/TimingFunction","type":"reference"},{"type":"text","text":" which describes the easing of the animation (e.g. "},{"type":"codeVoice","code":"easeIn"},{"type":"text","text":" or "},{"type":"codeVoice","code":"linear"},{"type":"text","text":") and a duration."}]},{"code":["let easingAnimation = EasingAnimation(timingFunction: .easeIn, duration: 2.0, value: value, target: target)","easingAnimation.valueChanged = { newValue in","    view.frame.origin = newValue","}","easingAnimation.start()"],"type":"codeListing","syntax":"swift"},{"level":3,"text":"Decay Animation","type":"heading","anchor":"Decay-Animation"},{"inlineContent":[{"text":"Performs animations with a decaying acceleration. There are two ways ways to create a decay animation:","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"target","type":"text"}],"type":"strong"},{"text":": You provide a target and the animation will animate the value to the target with a decaying acceleration.","type":"text"}]}]}],"type":"unorderedList"},{"type":"codeListing","syntax":"swift","code":["let decayAnimation = DecayAnimation(value: value, target: target)","decayAnimation.valueChanged = { newValue in","    view.frame.origin = newValue","}","decayAnimation.start()"]},{"items":[{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"velocity"}]},{"type":"text","text":": You provide a velocity and the animation will increase or decrease the initial value depending on the velocity and will slow to a stop. This essentially provides the same “decaying” that "},{"code":"UIScrollView","type":"codeVoice"},{"text":" does when you drag and let go. The animation is seeded with velocity, and that velocity decays over time.","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"},{"syntax":"swift","code":["let decayAnimation = DecayAnimation(value: value, velocity: velocity)","decayAnimation.valueChanged = { newValue in","    view.frame.origin = newValue","}","decayAnimation.start()"],"type":"codeListing"}]}],"kind":"article","abstract":[{"text":"Anima provides decay, easing and spring animations.","type":"text"}],"seeAlsoSections":[{"title":"Anmations","generated":true,"identifiers":["doc:\/\/Anima\/documentation\/Anima\/AnimationProviding","doc:\/\/Anima\/documentation\/Anima\/AnimationEvent","doc:\/\/Anima\/documentation\/Anima\/AnimationPosition","doc:\/\/Anima\/documentation\/Anima\/AnimatingState"]}],"metadata":{"role":"article","title":"Animations","roleHeading":"Article","modules":[{"name":"Anima"}]},"schemaVersion":{"patch":0,"minor":3,"major":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Anima\/documentation\/Anima\/Animations"},"hierarchy":{"paths":[["doc:\/\/Anima\/documentation\/Anima"]]},"sections":[],"references":{"doc://Anima/documentation/Anima/Spring/smooth":{"url":"\/documentation\/anima\/spring\/smooth","role":"symbol","abstract":[{"type":"text","text":"A smooth spring with a predefined duration and no bounce."}],"kind":"symbol","title":"smooth","type":"topic","identifier":"doc:\/\/Anima\/documentation\/Anima\/Spring\/smooth","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"smooth"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:5Anima6SpringV","text":"Spring"}]},"doc://Anima/documentation/Anima/AnimatingState":{"abstract":[{"text":"The current state of an ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/Anima\/documentation\/Anima\/AnimationProviding"},{"text":".","type":"text"}],"url":"\/documentation\/anima\/animatingstate","identifier":"doc:\/\/Anima\/documentation\/Anima\/AnimatingState","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"AnimatingState","kind":"identifier"}],"role":"symbol","title":"AnimatingState","kind":"symbol","type":"topic","navigatorTitle":[{"text":"AnimatingState","kind":"identifier"}]},"doc://Anima/documentation/Anima/SpringAnimation/valueChanged":{"kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"valueChanged","kind":"identifier"},{"kind":"text","text":": (("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"text":"currentValue","kind":"internalParam"},{"kind":"text","text":": "},{"text":"Value","kind":"typeIdentifier","preciseIdentifier":"s:5Anima15SpringAnimationC5Valuexmfp"},{"text":") -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":")?","kind":"text"}],"abstract":[{"type":"text","text":"The callback block to call when the animation’s "},{"isActive":true,"identifier":"doc:\/\/Anima\/documentation\/Anima\/SpringAnimation\/value","type":"reference"},{"type":"text","text":" changes as it executes. Use the "},{"code":"currentValue","type":"codeVoice"},{"text":" to drive your application’s animations.","type":"text"}],"title":"valueChanged","type":"topic","identifier":"doc:\/\/Anima\/documentation\/Anima\/SpringAnimation\/valueChanged","role":"symbol","url":"\/documentation\/anima\/springanimation\/valuechanged"},"doc://Anima/documentation/Anima/AnimatableProperty":{"title":"AnimatableProperty","kind":"symbol","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnimatableProperty"}],"navigatorTitle":[{"kind":"identifier","text":"AnimatableProperty"}],"identifier":"doc:\/\/Anima\/documentation\/Anima\/AnimatableProperty","url":"\/documentation\/anima\/animatableproperty","abstract":[{"text":"A type that describes an animatable value.","type":"text"}]},"doc://Anima/documentation/Anima/AnimationPosition":{"abstract":[{"type":"text","text":"Constants indicating positions within an "},{"identifier":"doc:\/\/Anima\/documentation\/Anima\/AnimationProviding","isActive":true,"type":"reference"},{"type":"text","text":" to use with "},{"isActive":true,"identifier":"doc:\/\/Anima\/documentation\/Anima\/AnimationProviding\/stop(at:immediately:)","type":"reference"},{"text":".","type":"text"}],"identifier":"doc:\/\/Anima\/documentation\/Anima\/AnimationPosition","url":"\/documentation\/anima\/animationposition","kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AnimationPosition"}],"navigatorTitle":[{"kind":"identifier","text":"AnimationPosition"}],"type":"topic","title":"AnimationPosition","role":"symbol"},"doc://Anima/documentation/Anima/AnimationProviding/start(afterDelay:)":{"title":"start(afterDelay:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"start","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"afterDelay"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"c:@T@NSTimeInterval","text":"TimeInterval"},{"text":")","kind":"text"}],"role":"symbol","abstract":[{"text":"Starts the animation from its current position with an optional delay.","type":"text"}],"identifier":"doc:\/\/Anima\/documentation\/Anima\/AnimationProviding\/start(afterDelay:)","type":"topic","url":"\/documentation\/anima\/animationproviding\/start(afterdelay:)","kind":"symbol","required":true},"doc://Anima/documentation/Anima/AnimationProviding/stop(at:immediately:)":{"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"stop","kind":"identifier"},{"kind":"text","text":"("},{"text":"at","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:5Anima17AnimationPositionO","kind":"typeIdentifier","text":"AnimationPosition"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"immediately"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":")","kind":"text"}],"role":"symbol","abstract":[{"text":"Stops the animation at the specified position.","type":"text"}],"identifier":"doc:\/\/Anima\/documentation\/Anima\/AnimationProviding\/stop(at:immediately:)","title":"stop(at:immediately:)","url":"\/documentation\/anima\/animationproviding\/stop(at:immediately:)","type":"topic","required":true},"doc://Anima/documentation/Anima/Spring/bouncy":{"role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"text":"bouncy","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:5Anima6SpringV","text":"Spring","kind":"typeIdentifier"}],"kind":"symbol","url":"\/documentation\/anima\/spring\/bouncy","identifier":"doc:\/\/Anima\/documentation\/Anima\/Spring\/bouncy","abstract":[{"text":"A spring with a predefined duration and higher amount of bounce.","type":"text"}],"title":"bouncy","type":"topic"},"doc://Anima/documentation/Anima/SpringAnimation/completion":{"kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"completion"},{"text":": ((","kind":"text"},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"text":"event","kind":"internalParam"},{"kind":"text","text":": "},{"text":"AnimationEvent","kind":"typeIdentifier","preciseIdentifier":"s:5Anima14AnimationEventO"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:5Anima15SpringAnimationC5Valuexmfp","text":"Value"},{"kind":"text","text":">) -> "},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"kind":"text","text":")?"}],"abstract":[{"type":"text","text":"The completion block to call when the animation either finishes, or “re-targets” to a new target value."}],"title":"completion","type":"topic","identifier":"doc:\/\/Anima\/documentation\/Anima\/SpringAnimation\/completion","role":"symbol","url":"\/documentation\/anima\/springanimation\/completion"},"doc://Anima/documentation/Anima/AnimationProviding/pause()":{"title":"pause()","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"pause"},{"kind":"text","text":"()"}],"role":"symbol","abstract":[{"text":"Pauses the animation at the current position.","type":"text"}],"identifier":"doc:\/\/Anima\/documentation\/Anima\/AnimationProviding\/pause()","type":"topic","url":"\/documentation\/anima\/animationproviding\/pause()","kind":"symbol","required":true},"doc://Anima/documentation/Anima/TimingFunction":{"navigatorTitle":[{"text":"TimingFunction","kind":"identifier"}],"role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TimingFunction","kind":"identifier"}],"url":"\/documentation\/anima\/timingfunction","title":"TimingFunction","type":"topic","abstract":[{"text":"The timing function maps an input time normalized to the range ","type":"text"},{"code":"[0,1]","type":"codeVoice"},{"text":" to an output time also in the range ","type":"text"},{"type":"codeVoice","code":"[0,1]"},{"type":"text","text":". It’s used to define the pacing of an animation as a timing curve."}],"kind":"symbol","identifier":"doc:\/\/Anima\/documentation\/Anima\/TimingFunction"},"doc://Anima/documentation/Anima/Spring/snappy":{"url":"\/documentation\/anima\/spring\/snappy","role":"symbol","kind":"symbol","title":"snappy","abstract":[{"type":"text","text":"A spring with a predefined duration and small amount of bounce that feels more snappy."}],"type":"topic","identifier":"doc:\/\/Anima\/documentation\/Anima\/Spring\/snappy","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"snappy"},{"kind":"text","text":": "},{"preciseIdentifier":"s:5Anima6SpringV","text":"Spring","kind":"typeIdentifier"}]},"doc://Anima/documentation/Anima/AnimationEvent":{"abstract":[{"text":"Constants indicating that an ","type":"text"},{"isActive":true,"identifier":"doc:\/\/Anima\/documentation\/Anima\/AnimationProviding","type":"reference"},{"type":"text","text":" either retargated or finished."}],"url":"\/documentation\/anima\/animationevent","identifier":"doc:\/\/Anima\/documentation\/Anima\/AnimationEvent","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnimationEvent","kind":"identifier"}],"role":"symbol","kind":"symbol","title":"AnimationEvent","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AnimationEvent"}]},"doc://Anima/documentation/Anima/AnimationProviding":{"kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AnimationProviding"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AnimationProviding"}],"abstract":[{"type":"text","text":"A type that provides an animation."}],"identifier":"doc:\/\/Anima\/documentation\/Anima\/AnimationProviding","title":"AnimationProviding","url":"\/documentation\/anima\/animationproviding","type":"topic"},"doc://Anima/documentation/Anima/SpringAnimation/value":{"title":"value","url":"\/documentation\/anima\/springanimation\/value","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"value"},{"kind":"text","text":": "},{"preciseIdentifier":"s:5Anima15SpringAnimationC5Valuexmfp","text":"Value","kind":"typeIdentifier"}],"identifier":"doc:\/\/Anima\/documentation\/Anima\/SpringAnimation\/value","kind":"symbol","abstract":[{"text":"The ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"current","type":"text"}]},{"type":"text","text":" value of the animation. This value will change as the animation executes."}],"type":"topic","role":"symbol"},"doc://Anima/documentation/Anima":{"kind":"symbol","type":"topic","title":"Anima","identifier":"doc:\/\/Anima\/documentation\/Anima","url":"\/documentation\/anima","abstract":[{"type":"text","text":"Anima is an animation framework for iOS, tvOS, and macOS. It can animate properties using spring, easing and decay animations."}],"role":"collection"},"doc://Anima/documentation/Anima/Spring":{"identifier":"doc:\/\/Anima\/documentation\/Anima\/Spring","navigatorTitle":[{"kind":"identifier","text":"Spring"}],"kind":"symbol","abstract":[{"text":"A representation of a spring’s motion.","type":"text"}],"role":"symbol","title":"Spring","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Spring","kind":"identifier"}],"url":"\/documentation\/anima\/spring"}}}