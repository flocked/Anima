{"schemaVersion":{"patch":0,"major":0,"minor":3},"seeAlsoSections":[{"title":"Animatable Property","identifiers":["doc:\/\/Anima\/documentation\/Anima\/AnimatableProperty","doc:\/\/Anima\/documentation\/Anima\/AnimatableArray"],"generated":true}],"metadata":{"roleHeading":"Article","modules":[{"name":"Anima"}],"role":"article","title":"Animatable Properties"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Anima\/documentation\/Anima\/AnimatableProperties"},"primaryContentSections":[{"content":[{"text":"Overview","anchor":"Overview","level":2,"type":"heading"},{"inlineContent":[{"text":"Any type conforming to ","type":"text"},{"identifier":"doc:\/\/Anima\/documentation\/Anima\/AnimatableProperty","type":"reference","isActive":true},{"text":" can be animated by ","type":"text"},{"type":"codeVoice","code":"Anima"},{"type":"text","text":"."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"By default, lots of types already supported it:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"codeVoice","code":"Float"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Double"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"CGFloat"}]}]},{"content":[{"inlineContent":[{"code":"CGPoint","type":"codeVoice"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"CGSize"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"CGRect"}]}]},{"content":[{"inlineContent":[{"code":"CGColor","type":"codeVoice"},{"text":" \/ ","type":"text"},{"type":"codeVoice","code":"NSColor"},{"text":" \/ ","type":"text"},{"type":"codeVoice","code":"UIColor"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"CATransform3D","type":"codeVoice"},{"text":" \/ ","type":"text"},{"code":"CGAffineTransform","type":"codeVoice"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"… and many more."}]}]}]},{"anchor":"How-to-conform-to-AnimatableProperty","type":"heading","level":2,"text":"How to conform to AnimatableProperty"},{"type":"paragraph","inlineContent":[{"type":"text","text":"To conform to "},{"isActive":true,"identifier":"doc:\/\/Anima\/documentation\/Anima\/AnimatableProperty","type":"reference"},{"type":"text","text":" you have to provide:"}]},{"items":[{"content":[{"inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/Anima\/documentation\/Anima\/AnimatableProperty\/animatableData-8pqdo"},{"type":"text","text":": A representation of the type conforming "},{"code":"VectorArithmetic","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"identifier":"doc:\/\/Anima\/documentation\/Anima\/AnimatableProperty\/init(_:)-9bv2w","isActive":true,"type":"reference"},{"text":": Initialization of the type with the ","type":"text"},{"code":"animatableData","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"isActive":true,"type":"reference","identifier":"doc:\/\/Anima\/documentation\/Anima\/AnimatableProperty\/zero"},{"type":"text","text":" The zero value of the type."}],"type":"paragraph"}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"animatableData"},{"type":"text","text":" is used by "},{"type":"codeVoice","code":"Anima"},{"type":"text","text":" to calculate the interpolation of the values while animating."}]},{"type":"paragraph","inlineContent":[{"text":"The easist way to provide animatableData,  is to use ","type":"text"},{"code":"AnimatabeArray","type":"codeVoice"},{"text":".","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Example:"}]},{"syntax":"swift","code":["struct MyStruct {","   let value: Double","   let point: CGPoint","}","","extension MyStruct: AnimatableProperty {","   init(_ animatableData: AnimatableArray<Double>) {","       value = animatableData[0]","       point = CGPoint(x: animatableData[1], y: animatableData[2])","   }","","   var animatableData: AnimatableArray<Double> {","       [value, point.x, point.y]","   }","","   static let zero = MyStruct(value: 0, point: .zero)","}"],"type":"codeListing"},{"inlineContent":[{"text":"You can optionally also provide ","type":"text"},{"isActive":true,"identifier":"doc:\/\/Anima\/documentation\/Anima\/AnimatableProperty\/scaledIntegral-7mdub","type":"reference"},{"type":"text","text":", a scaled integral of the value. It is used to integralize the value to the screen’s pixel boundaries on animations where "},{"isActive":true,"type":"reference","identifier":"doc:\/\/Anima\/documentation\/Anima\/Anima\/AnimationOptions\/integralizeValues"},{"text":" is active. This helps prevent drawing frames between pixels, causing aliasing issues.","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["var scaledIntegral: MyStruct {","    let scaledIntegralPoint = CGPoint(x: point.x.scaledIntegral, y: y.scaledIntegral)","    return MyStruct(value: value.scaledIntegral, point: scaledIntegralPoint)","}"]}],"kind":"content"}],"sections":[],"abstract":[{"type":"text","text":"Make properties animatable by conforming to "},{"code":"AnimatableProperty","type":"codeVoice"},{"text":".","type":"text"}],"hierarchy":{"paths":[["doc:\/\/Anima\/documentation\/Anima"]]},"kind":"article","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/anima\/animatableproperties"]}],"references":{"doc://Anima/documentation/Anima/AnimatableProperty":{"type":"topic","identifier":"doc:\/\/Anima\/documentation\/Anima\/AnimatableProperty","role":"symbol","abstract":[{"type":"text","text":"A type that describes an animatable value."}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnimatableProperty","kind":"identifier"}],"navigatorTitle":[{"text":"AnimatableProperty","kind":"identifier"}],"url":"\/documentation\/anima\/animatableproperty","title":"AnimatableProperty","kind":"symbol"},"doc://Anima/documentation/Anima/AnimatableArray":{"title":"AnimatableArray","abstract":[{"type":"text","text":"An array that can serve as the animatable data of an animatable type (see "},{"type":"reference","identifier":"doc:\/\/Anima\/documentation\/Anima\/AnimatableProperty","isActive":true},{"type":"text","text":")."}],"type":"topic","navigatorTitle":[{"text":"AnimatableArray","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/anima\/animatablearray","identifier":"doc:\/\/Anima\/documentation\/Anima\/AnimatableArray","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"AnimatableArray","kind":"identifier"}]},"doc://Anima/documentation/Anima/Anima/AnimationOptions/integralizeValues":{"abstract":[{"type":"text","text":"When the animation finishes the value will be integralized to the screen’s pixel boundaries. This helps prevent drawing frames between pixels, causing aliasing issues."}],"identifier":"doc:\/\/Anima\/documentation\/Anima\/Anima\/AnimationOptions\/integralizeValues","url":"\/documentation\/anima\/anima\/animationoptions\/integralizevalues","role":"symbol","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"text":"integralizeValues","kind":"identifier"},{"kind":"text","text":": "},{"text":"Anima","kind":"typeIdentifier","preciseIdentifier":"s:5AnimaAAC"},{"text":".","kind":"text"},{"text":"AnimationOptions","preciseIdentifier":"s:5AnimaAAC16AnimationOptionsV","kind":"typeIdentifier"}],"title":"integralizeValues","type":"topic"},"doc://Anima/documentation/Anima/AnimatableProperty/animatableData-8pqdo":{"identifier":"doc:\/\/Anima\/documentation\/Anima\/AnimatableProperty\/animatableData-8pqdo","title":"animatableData","abstract":[{"text":"The animatable representation of the value.","type":"text"}],"required":true,"role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"animatableData","kind":"identifier"},{"kind":"text","text":": "},{"text":"AnimatableData","kind":"typeIdentifier","preciseIdentifier":"s:5Anima18AnimatablePropertyP0B4DataQa"}],"defaultImplementations":1,"kind":"symbol","type":"topic","url":"\/documentation\/anima\/animatableproperty\/animatabledata-8pqdo"},"doc://Anima/documentation/Anima/AnimatableProperty/scaledIntegral-7mdub":{"identifier":"doc:\/\/Anima\/documentation\/Anima\/AnimatableProperty\/scaledIntegral-7mdub","title":"scaledIntegral","abstract":[{"type":"text","text":"The scaled integral representation of this value."}],"required":true,"role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"scaledIntegral"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"defaultImplementations":1,"kind":"symbol","type":"topic","url":"\/documentation\/anima\/animatableproperty\/scaledintegral-7mdub"},"doc://Anima/documentation/Anima/AnimatableProperty/init(_:)-9bv2w":{"identifier":"doc:\/\/Anima\/documentation\/Anima\/AnimatableProperty\/init(_:)-9bv2w","title":"init(_:)","abstract":[{"text":"Initializes the value with the specified animatable representation of the value.","type":"text"}],"required":true,"role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"text":"AnimatableData","preciseIdentifier":"s:5Anima18AnimatablePropertyP0B4DataQa","kind":"typeIdentifier"},{"kind":"text","text":")"}],"defaultImplementations":4,"kind":"symbol","type":"topic","url":"\/documentation\/anima\/animatableproperty\/init(_:)-9bv2w"},"doc://Anima/documentation/Anima":{"abstract":[{"type":"text","text":"Anima is an animation framework for iOS, tvOS, and macOS. It can animate properties using spring, easing and decay animations."}],"title":"Anima","role":"collection","identifier":"doc:\/\/Anima\/documentation\/Anima","type":"topic","kind":"symbol","url":"\/documentation\/anima"},"doc://Anima/documentation/Anima/AnimatableProperty/zero":{"identifier":"doc:\/\/Anima\/documentation\/Anima\/AnimatableProperty\/zero","title":"zero","abstract":[{"text":"The zero value.","type":"text"}],"required":true,"role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"zero","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"}],"kind":"symbol","type":"topic","url":"\/documentation\/anima\/animatableproperty\/zero"}}}