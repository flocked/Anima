{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Anima\/documentation\/Anima\/Animations"},"metadata":{"modules":[{"name":"Anima"}],"title":"Animations","roleHeading":"Article","role":"article"},"abstract":[{"text":"Anima provides decay, easing and spring animations.","type":"text"}],"seeAlsoSections":[{"identifiers":["doc:\/\/Anima\/documentation\/Anima\/AnimationProviding","doc:\/\/Anima\/documentation\/Anima\/AnimationEvent","doc:\/\/Anima\/documentation\/Anima\/AnimationPosition","doc:\/\/Anima\/documentation\/Anima\/AnimatingState"],"title":"Anmations","generated":true}],"sections":[],"kind":"article","schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/Anima\/documentation\/Anima"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/anima\/animations"]}],"primaryContentSections":[{"kind":"content","content":[{"text":"Overview","anchor":"Overview","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"There are three types of animations: Decay, Easing and Spring. They let you animate properties conforming to ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/Anima\/documentation\/Anima\/AnimatableProperty"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You provide the inital value and target of the animation."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"To start an animation use      "},{"type":"reference","identifier":"doc:\/\/Anima\/documentation\/Anima\/AnimationProviding\/start(afterDelay:)","isActive":true},{"text":", to pause      ","type":"text"},{"isActive":true,"identifier":"doc:\/\/Anima\/documentation\/Anima\/AnimationProviding\/pause()","type":"reference"},{"type":"text","text":" and to stop "},{"identifier":"doc:\/\/Anima\/documentation\/Anima\/AnimationProviding\/stop(at:immediately:)","isActive":true,"type":"reference"},{"text":".","type":"text"}]},{"type":"paragraph","inlineContent":[{"identifier":"doc:\/\/Anima\/documentation\/Anima\/SpringAnimation\/valueChanged","type":"reference","isActive":true},{"type":"text","text":" gets called whenever the current value of the animation changes."}]},{"code":["let animation = SpringAnimation(spring: .bouncy, value: view.frame.size, target: CGSize(width: 500, height: 500))","animation.valueChanged = { newSize in ","    view.frame.size = newSize","}","animation.start(afterDelay: 0.0)"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"identifier":"doc:\/\/Anima\/documentation\/Anima\/SpringAnimation\/completion","isActive":true,"type":"reference"},{"text":" gets called when the animation either finishes, or “re-targets” to a new target value.","type":"text"}]},{"code":["animation.completion = { event in ","    if event.isFinished {","    \/\/ handle finished state","    }","}"],"syntax":"swift","type":"codeListing"},{"text":"Animation Types","type":"heading","level":2,"anchor":"Animation-Types"},{"anchor":"Spring-Animation","type":"heading","level":3,"text":"Spring Animation"},{"inlineContent":[{"text":"A spring based animation for fluid animations.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"You provide a ","type":"text"},{"identifier":"doc:\/\/Anima\/documentation\/Anima\/Spring","type":"reference","isActive":true},{"type":"text","text":" which describes the spring configuration. "},{"type":"codeVoice","code":"Spring"},{"type":"text","text":" offers many predefined configurations like "},{"type":"reference","identifier":"doc:\/\/Anima\/documentation\/Anima\/Spring\/bouncy","isActive":true},{"text":", ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/Anima\/documentation\/Anima\/Spring\/smooth"},{"type":"text","text":" or "},{"isActive":true,"type":"reference","identifier":"doc:\/\/Anima\/documentation\/Anima\/Spring\/snappy"},{"text":").","type":"text"}]},{"type":"codeListing","code":["let value = CGPoint(x: 0, y: 0)","let target = CGPoint(x: 100, y: 100)","","let springAnimation = SpringAnimation(spring: .bouncy, value: value, target: target)","springAnimation.valueChanged = { newValue in","    view.frame.origin = newValue","}","springAnimation.start()"],"syntax":"swift"},{"inlineContent":[{"type":"text","text":"When changing the target while the animation is runniong, the animation’s velocity is preserved for providing fluid animations."}],"type":"paragraph"},{"type":"heading","text":"Easing Animation","level":3,"anchor":"Easing-Animation"},{"type":"paragraph","inlineContent":[{"type":"text","text":"An easing based animation."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You provide it "},{"identifier":"doc:\/\/Anima\/documentation\/Anima\/TimingFunction","isActive":true,"type":"reference"},{"text":" which describes the easing of the animation (e.g. ","type":"text"},{"type":"codeVoice","code":"easeIn"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"linear"},{"type":"text","text":") and a duration."}]},{"type":"codeListing","syntax":"swift","code":["let easingAnimation = EasingAnimation(timingFunction: .easeIn, duration: 2.0, value: value, target: target)","easingAnimation.valueChanged = { newValue in","    view.frame.origin = newValue","}","easingAnimation.start()"]},{"text":"Decay Animation","anchor":"Decay-Animation","type":"heading","level":3},{"inlineContent":[{"type":"text","text":"Performs animations with a decaying acceleration. There are two ways ways to create a decay animation:"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"target"}]},{"text":": You provide a target and the animation will animate the value to the target with a decaying acceleration.","type":"text"}]}]}]},{"code":["let decayAnimation = DecayAnimation(value: value, target: target)","decayAnimation.valueChanged = { newValue in","    view.frame.origin = newValue","}","decayAnimation.start()"],"syntax":"swift","type":"codeListing"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"velocity"}]},{"text":": You provide a velocity and the animation will increase or decrease the initial value depending on the velocity and will slow to a stop. This essentially provides the same “decaying” that ","type":"text"},{"code":"UIScrollView","type":"codeVoice"},{"text":" does when you drag and let go. The animation is seeded with velocity, and that velocity decays over time.","type":"text"}],"type":"paragraph"}]}]},{"syntax":"swift","code":["let decayAnimation = DecayAnimation(value: value, velocity: velocity)","decayAnimation.valueChanged = { newValue in","    view.frame.origin = newValue","}","decayAnimation.start()"],"type":"codeListing"}]}],"references":{"doc://Anima/documentation/Anima/Spring/smooth":{"kind":"symbol","url":"\/documentation\/anima\/spring\/smooth","title":"smooth","abstract":[{"type":"text","text":"A smooth spring with a predefined duration and no bounce."}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"text":"smooth","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Spring","preciseIdentifier":"s:5Anima6SpringV","kind":"typeIdentifier"}],"identifier":"doc:\/\/Anima\/documentation\/Anima\/Spring\/smooth","type":"topic","role":"symbol"},"doc://Anima/documentation/Anima/AnimationEvent":{"url":"\/documentation\/anima\/animationevent","type":"topic","title":"AnimationEvent","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AnimationEvent"}],"navigatorTitle":[{"text":"AnimationEvent","kind":"identifier"}],"abstract":[{"type":"text","text":"Constants indicating that an "},{"isActive":true,"type":"reference","identifier":"doc:\/\/Anima\/documentation\/Anima\/AnimationProviding"},{"type":"text","text":" either retargated or finished."}],"identifier":"doc:\/\/Anima\/documentation\/Anima\/AnimationEvent","kind":"symbol"},"doc://Anima/documentation/Anima/Spring/bouncy":{"kind":"symbol","url":"\/documentation\/anima\/spring\/bouncy","title":"bouncy","abstract":[{"text":"A spring with a predefined duration and higher amount of bounce.","type":"text"}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"text":"bouncy","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:5Anima6SpringV","text":"Spring"}],"identifier":"doc:\/\/Anima\/documentation\/Anima\/Spring\/bouncy","type":"topic","role":"symbol"},"doc://Anima/documentation/Anima/AnimatingState":{"title":"AnimatingState","role":"symbol","url":"\/documentation\/anima\/animatingstate","navigatorTitle":[{"kind":"identifier","text":"AnimatingState"}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnimatingState","kind":"identifier"}],"identifier":"doc:\/\/Anima\/documentation\/Anima\/AnimatingState","abstract":[{"type":"text","text":"The current state of an "},{"type":"reference","identifier":"doc:\/\/Anima\/documentation\/Anima\/AnimationProviding","isActive":true},{"text":".","type":"text"}],"type":"topic","kind":"symbol"},"doc://Anima/documentation/Anima/AnimationProviding/start(afterDelay:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"start"},{"text":"(","kind":"text"},{"text":"afterDelay","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"TimeInterval","preciseIdentifier":"c:@T@NSTimeInterval","kind":"typeIdentifier"},{"kind":"text","text":")"}],"title":"start(afterDelay:)","type":"topic","url":"\/documentation\/anima\/animationproviding\/start(afterdelay:)","identifier":"doc:\/\/Anima\/documentation\/Anima\/AnimationProviding\/start(afterDelay:)","required":true,"abstract":[{"text":"Starts the animation from its current position with an optional delay.","type":"text"}],"kind":"symbol","role":"symbol"},"doc://Anima/documentation/Anima/Spring":{"kind":"symbol","url":"\/documentation\/anima\/spring","title":"Spring","abstract":[{"type":"text","text":"A representation of a spring’s motion."}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Spring","kind":"identifier"}],"identifier":"doc:\/\/Anima\/documentation\/Anima\/Spring","navigatorTitle":[{"kind":"identifier","text":"Spring"}],"type":"topic","role":"symbol"},"doc://Anima/documentation/Anima/AnimationProviding/pause()":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"pause","kind":"identifier"},{"text":"()","kind":"text"}],"url":"\/documentation\/anima\/animationproviding\/pause()","type":"topic","title":"pause()","identifier":"doc:\/\/Anima\/documentation\/Anima\/AnimationProviding\/pause()","required":true,"abstract":[{"text":"Pauses the animation at the current position.","type":"text"}],"kind":"symbol","role":"symbol"},"doc://Anima/documentation/Anima/AnimationPosition":{"url":"\/documentation\/anima\/animationposition","abstract":[{"type":"text","text":"Constants indicating positions within an "},{"identifier":"doc:\/\/Anima\/documentation\/Anima\/AnimationProviding","type":"reference","isActive":true},{"text":" to use with ","type":"text"},{"identifier":"doc:\/\/Anima\/documentation\/Anima\/AnimationProviding\/stop(at:immediately:)","type":"reference","isActive":true},{"text":".","type":"text"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/Anima\/documentation\/Anima\/AnimationPosition","title":"AnimationPosition","navigatorTitle":[{"text":"AnimationPosition","kind":"identifier"}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnimationPosition","kind":"identifier"}],"role":"symbol"},"doc://Anima/documentation/Anima/SpringAnimation/valueChanged":{"type":"topic","title":"valueChanged","url":"\/documentation\/anima\/springanimation\/valuechanged","identifier":"doc:\/\/Anima\/documentation\/Anima\/SpringAnimation\/valueChanged","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"valueChanged"},{"text":": ((","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"currentValue"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:5Anima15SpringAnimationC5Valuexmfp","text":"Value","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")?"}],"abstract":[{"text":"The callback block to call when the animation’s ","type":"text"},{"type":"reference","identifier":"doc:\/\/Anima\/documentation\/Anima\/SpringAnimation\/value","isActive":true},{"text":" changes as it executes. Use the ","type":"text"},{"code":"currentValue","type":"codeVoice"},{"text":" to drive your application’s animations.","type":"text"}],"role":"symbol","kind":"symbol"},"doc://Anima/documentation/Anima/SpringAnimation/value":{"kind":"symbol","url":"\/documentation\/anima\/springanimation\/value","title":"value","abstract":[{"type":"text","text":"The "},{"type":"emphasis","inlineContent":[{"text":"current","type":"text"}]},{"type":"text","text":" value of the animation. This value will change as the animation executes."}],"identifier":"doc:\/\/Anima\/documentation\/Anima\/SpringAnimation\/value","role":"symbol","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"value"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier","preciseIdentifier":"s:5Anima15SpringAnimationC5Valuexmfp"}]},"doc://Anima/documentation/Anima/AnimationProviding/stop(at:immediately:)":{"role":"symbol","abstract":[{"type":"text","text":"Stops the animation at the specified position."}],"type":"topic","url":"\/documentation\/anima\/animationproviding\/stop(at:immediately:)","required":true,"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"stop"},{"text":"(","kind":"text"},{"text":"at","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"AnimationPosition","preciseIdentifier":"s:5Anima17AnimationPositionO"},{"text":", ","kind":"text"},{"text":"immediately","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":")","kind":"text"}],"kind":"symbol","identifier":"doc:\/\/Anima\/documentation\/Anima\/AnimationProviding\/stop(at:immediately:)","title":"stop(at:immediately:)"},"doc://Anima/documentation/Anima/Spring/snappy":{"kind":"symbol","url":"\/documentation\/anima\/spring\/snappy","title":"snappy","abstract":[{"type":"text","text":"A spring with a predefined duration and small amount of bounce that feels more snappy."}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"text":"snappy","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Spring","preciseIdentifier":"s:5Anima6SpringV","kind":"typeIdentifier"}],"identifier":"doc:\/\/Anima\/documentation\/Anima\/Spring\/snappy","type":"topic","role":"symbol"},"doc://Anima/documentation/Anima/TimingFunction":{"role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TimingFunction","kind":"identifier"}],"navigatorTitle":[{"text":"TimingFunction","kind":"identifier"}],"title":"TimingFunction","url":"\/documentation\/anima\/timingfunction","type":"topic","abstract":[{"type":"text","text":"The timing function maps an input time normalized to the range "},{"type":"codeVoice","code":"[0,1]"},{"text":" to an output time also in the range ","type":"text"},{"code":"[0,1]","type":"codeVoice"},{"text":". It’s used to define the pacing of an animation as a timing curve.","type":"text"}],"identifier":"doc:\/\/Anima\/documentation\/Anima\/TimingFunction","kind":"symbol"},"doc://Anima/documentation/Anima":{"kind":"symbol","type":"topic","url":"\/documentation\/anima","identifier":"doc:\/\/Anima\/documentation\/Anima","title":"Anima","role":"collection","abstract":[{"type":"text","text":"Anima is an animation framework for iOS, tvOS, and macOS. It can animate properties using spring, easing and decay animations."}]},"doc://Anima/documentation/Anima/AnimatableProperty":{"kind":"symbol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"AnimatableProperty","kind":"identifier"}],"url":"\/documentation\/anima\/animatableproperty","identifier":"doc:\/\/Anima\/documentation\/Anima\/AnimatableProperty","title":"AnimatableProperty","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AnimatableProperty"}],"abstract":[{"type":"text","text":"A type that describes an animatable value."}]},"doc://Anima/documentation/Anima/SpringAnimation/completion":{"kind":"symbol","url":"\/documentation\/anima\/springanimation\/completion","title":"completion","abstract":[{"text":"The completion block to call when the animation either finishes, or “re-targets” to a new target value.","type":"text"}],"identifier":"doc:\/\/Anima\/documentation\/Anima\/SpringAnimation\/completion","role":"symbol","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"completion","kind":"identifier"},{"text":": ((","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"event"},{"kind":"text","text":": "},{"preciseIdentifier":"s:5Anima14AnimationEventO","kind":"typeIdentifier","text":"AnimationEvent"},{"kind":"text","text":"<"},{"text":"Value","preciseIdentifier":"s:5Anima15SpringAnimationC5Valuexmfp","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"kind":"text","text":")?"}]},"doc://Anima/documentation/Anima/AnimationProviding":{"title":"AnimationProviding","role":"symbol","url":"\/documentation\/anima\/animationproviding","navigatorTitle":[{"kind":"identifier","text":"AnimationProviding"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnimationProviding","kind":"identifier"}],"identifier":"doc:\/\/Anima\/documentation\/Anima\/AnimationProviding","abstract":[{"type":"text","text":"A type that provides an animation."}],"kind":"symbol","type":"topic"}}}