{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Anima\/documentation\/Anima\/TimingFunction\/UnitBezier\/solve(x:epsilon:)"},"kind":"symbol","abstract":[{"text":"Calculates the resulting ","type":"text"},{"type":"codeVoice","code":"y"},{"type":"text","text":" for given "},{"type":"codeVoice","code":"x"},{"type":"text","text":"."}],"variants":[{"paths":["\/documentation\/anima\/timingfunction\/unitbezier\/solve(x:epsilon:)"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/Anima\/documentation\/Anima","doc:\/\/Anima\/documentation\/Anima\/TimingFunction","doc:\/\/Anima\/documentation\/Anima\/TimingFunction\/UnitBezier"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"solve","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"x"},{"text":": ","kind":"text"},{"text":"Double","kind":"typeIdentifier","preciseIdentifier":"s:Sd"},{"kind":"text","text":", "},{"text":"epsilon","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Double","preciseIdentifier":"s:Sd","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Double","kind":"typeIdentifier","preciseIdentifier":"s:Sd"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"content","content":[{"level":2,"text":"Return Value","anchor":"return-value","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"The solved ","type":"text"},{"type":"codeVoice","code":"y"},{"text":" value.","type":"text"}]}]},{"content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"x: The value to solve for."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"epsilon: The required precision of the result (where "},{"type":"codeVoice","code":"x * epsilon"},{"text":" is the maximum time segment to be evaluated).","type":"text"}]}]}],"type":"unorderedList"}],"kind":"content"}],"metadata":{"role":"symbol","title":"solve(x:epsilon:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"solve"},{"kind":"text","text":"("},{"kind":"externalParam","text":"x"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sd","text":"Double"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"epsilon"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sd","text":"Double","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sd","text":"Double","kind":"typeIdentifier"}],"modules":[{"name":"Anima"}],"symbolKind":"method","roleHeading":"Instance Method","externalID":"s:5Anima14TimingFunctionO10UnitBezierV5solve1x7epsilonS2d_SdtF"},"sections":[],"references":{"doc://Anima/documentation/Anima":{"kind":"symbol","type":"topic","url":"\/documentation\/anima","abstract":[{"text":"Anima is an animation framework for iOS, tvOS, and macOS. It can animate properties using spring, easing and decay animations.","type":"text"}],"role":"collection","title":"Anima","identifier":"doc:\/\/Anima\/documentation\/Anima"},"doc://Anima/documentation/Anima/TimingFunction/UnitBezier/solve(x:epsilon:)":{"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Calculates the resulting "},{"type":"codeVoice","code":"y"},{"type":"text","text":" for given "},{"code":"x","type":"codeVoice"},{"text":".","type":"text"}],"title":"solve(x:epsilon:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"solve"},{"kind":"text","text":"("},{"text":"x","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sd","text":"Double","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"epsilon"},{"kind":"text","text":": "},{"text":"Double","kind":"typeIdentifier","preciseIdentifier":"s:Sd"},{"text":") -> ","kind":"text"},{"text":"Double","preciseIdentifier":"s:Sd","kind":"typeIdentifier"}],"role":"symbol","identifier":"doc:\/\/Anima\/documentation\/Anima\/TimingFunction\/UnitBezier\/solve(x:epsilon:)","url":"\/documentation\/anima\/timingfunction\/unitbezier\/solve(x:epsilon:)"},"doc://Anima/documentation/Anima/TimingFunction/UnitBezier":{"kind":"symbol","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UnitBezier","kind":"identifier"}],"navigatorTitle":[{"text":"UnitBezier","kind":"identifier"}],"abstract":[{"type":"text","text":"A bezier curve that can be used to calculate timing functions."}],"type":"topic","title":"TimingFunction.UnitBezier","identifier":"doc:\/\/Anima\/documentation\/Anima\/TimingFunction\/UnitBezier","url":"\/documentation\/anima\/timingfunction\/unitbezier"},"doc://Anima/documentation/Anima/TimingFunction":{"identifier":"doc:\/\/Anima\/documentation\/Anima\/TimingFunction","type":"topic","url":"\/documentation\/anima\/timingfunction","role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"TimingFunction"}],"fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"TimingFunction"}],"title":"TimingFunction","abstract":[{"type":"text","text":"The timing function maps an input time normalized to the range "},{"code":"[0,1]","type":"codeVoice"},{"text":" to an output time also in the range ","type":"text"},{"type":"codeVoice","code":"[0,1]"},{"type":"text","text":". Itâ€™s used to define the pacing of an animation as a timing curve."}]}}}